server {
 ## limits remote clients to no more than 10 concurrently "open"
 ## connections per remote ip address being processed by Nginx.
 limit_conn arbeit 10;

 ## Main Seetings
 server_name domain.com www.domain.com;
 root /var/www/domain.com/public_html/;

 ## Parameterization using hostname of access and log filenames.
 access_log /var/www/domain.com/logs/access.log;
 error_log /var/www/domain.com/logs/error.log;

 ## UNCOMENT TO DISPLAY MAINTENANCE PAGE
 ## If not ip 111.222.333.444 redirect to error503.html
 #if ($remote_addr != "111.222.333.444") { return 503; }
 #error_page 503 @maintenance;
 #location @maintenance { rewrite ^(.*)$ /error503.html break; }    

 ## Disable all methods besides HEAD, GET and POST.
 if ($request_method !~ ^(GET|HEAD|POST)$ ) {
 return 444;
 }

 ## If no favicon exists return a 204 (no content error).
 location = /favicon.ico {
 try_files $uri =204;
 log_not_found off;
 access_log off;
 }    

 ## Don't log robots.txt requests.
 location = /robots.txt {
 allow all;
 log_not_found off;
 access_log off;
 }

 ## Static files are served directly.
 location ~* \.(jpe?g|gif|css|png|js|ico|pdf|zip|tar|t?gz|mp3|wav|swf)$ {
 access_log off; ## Do not log access to these files
 expires max;
 log_not_found off;
 }

 ## Keep a tab on the 'big' static files.
 location ~* ^.+\.(?:m4a|mp[34]|mov|ogg|flv|pdf|ppt[x]*)$ {
 expires 30d;
 }

 ## Sets index files, redirect 404 to index.php;
 index index.htm index.html index.php; ## Allow a static html file to be shown first
 error_page 404 index.php;        

 ## Test resquested file, folder and if failed, redirect to index.php
 ## with the uri attached as parameter
 location / {
 try_files $uri $uri/ /index.php?q=$request_uri;
 }

 ## Disable access to certain folders located at the root of the fodler
 location ~ ^/(conf|includes|media)/ {
 return 404;
 }

 ## Disable access to specific files
 #location ~* (config.php)$ {
 #return 404;
 #}

 ## Disable access to certain files matching specified file types
 location ~* ^.*(\.(?:git|svn|htaccess|txt|po[t]*))$ {
 return 404;
 }    

 # Deny access based on the User-Agent header.
 if ($http_user_agent ~* (HTTrack|HTMLParser|libwww) ) {
 return 444;
 }

 # Deny access based on the Referer header.
 if ($http_referer ~* (babes|click|diamond|forsale|girl|jewelry|love|nudit|organic|poker|porn|poweroversoftware|sex|teen|video|webcam|zippo|casino|replica) ) {
 return 444;
 }

 location ~ \.php$ {
 expires off; ## Do not cache dynamic content
 include /etc/nginx/fastcgi_params;
 fastcgi_pass 127.0.0.1:9000;

 fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
 fastcgi_param SCRIPT_NAME $fastcgi_script_name;
 fastcgi_param PATH_INFO $fastcgi_path_info;
 }
}
